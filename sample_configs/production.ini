[app:main]
use = egg:Nudibranch

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
                 pyramid_chameleon
                 pyramid_exclog
                 pyramid_layout
                 pyramid_mailer
                 pyramid_tm

# Secrets
auth_secret = <PYRAMID_SECRET>
cookie_secret = <COOKIE_SECRET>

# Custom configuration
mail.default_sender = Submit Mailer <mailer@sitename.tld>
site_name = Submit
google_analytics_id =

file_directory = /path/to/save/files/to
queue_server = localhost
queue_verification = nudibranch_verification
queue_verification_error = nudibranch_verification_error
queue_tell_worker = nudibranch_tell_worker_high
                    nudibranch_tell_worker_normal
                    nudibranch_tell_worker_low
queue_tell_worker_error = nudibranch_tell_worker_error
queue_sync_files = nudibranch_sync_files
queue_fetch_results = nudibranch_fetch_results
sqlalchemy.echo = false
sqlalchemy.url = postgresql+pg8000://user:pass@host/database
ssh_priv_key = /path/to/ssh/priv/key
worker_machines = host1
                  host2
                  host3

verification_log_file=verification.log
verification_pid_file=verification.pid
worker_proxy_log_file = worker_proxy_{}.log
worker_proxy_pid_file = worker_proxy_{}.pid

exc_mail_from = submit0@cs.ucsb.edu
exc_mail_to = user@host.tld

# Begin logging configuration

[loggers]
keys = root, nudibranch, alembic, exc_logger

[handlers]
keys = console, exc_handler

[formatters]
keys = generic, exc_formatter

[logger_root]
level = WARN
handlers = console

[logger_nudibranch]
level = WARN
handlers =
qualname = nudibranch

[logger_exc_logger]
level = ERROR
handlers = exc_handler
qualname = exc_logger

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_exc_handler]
class = handlers.SMTPHandler
args = (('localhost', 25), 'from@sitename.tld', ['to@sitename.tld'], 'Submit Exception')
level = ERROR
formatter = exc_formatter

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_exc_formatter]
format = %(asctime)s %(message)s

# End logging configuration

[uwsgi]
socket = /path/to/uwsgi.sock
master = true

# Prevent error:
#  "readv() failed (104: Connection reset by peer) while reading upstream"
post-buffering = 8192

processes = 4
daemonize = /path/to/uwsgi.log
pidfile = /path/to/uwsgi.pid
listen = 256

max-requests = 1000
no-orphans = true
virtualenv = /path/to/venv


# Migration configuration

[alembic]
script_location = alembic
# The following URL should match the application setting
sqlalchemy.url = postgresql+pg8000://user:pass@host/database

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[pshell]
class_ = nudibranch.models.Class
project = nudibranch.models.Project
submission = nudibranch.models.Submission
user = nudibranch.models.User
s = nudibranch.models.Session
t = transaction
