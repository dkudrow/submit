<metal:block use-macro="main_template">
  <div metal:fill-slot="content">
    <h1>Editing <a href="${request.route_path('class_item', class_name=project.class_.name)}">${project.class_.name}</a>
      --
      <a href="${request.route_path('project_item_summary', class_name=project.class_.name, project_id=project.id)}">${project.name}</a>
      <button class="btn btn-warning" id="requeue">
        <i class="icon-white icon-repeat"></i> Requeue Latest Submissions
      </button>
    </h1>
    ${panel('js_test')}

    <div class="alert alert-danger" tal:condition="project.class_.is_locked">
      The class for this project is locked. You will not be able to make any
      changes.</div>
    <div class="alert alert-danger" tal:condition="project.status == 'locked'">
      This project is locked. You will not be able to make any changes.</div>

    <form class="form-horizontal well" role="form" classid="project_form" name="input" action="${action}"
          onsubmit="return form_request(this, 'POST', true);">
      <div>
        <label class="control-label" for="name">Project Name</label>
        <div class="controls">
          <input type="text" name="name" id="name" value="${project.name}">
        </div>
      </div>
      <div>
        <label class="control-label" for="group_max">Maximum Group Size</label>
        <div class="controls">
          <input class="input-small" type="text" name="group_max" id="group_max" value="${project.group_max}">
        </div>
      </div>
      <div>
        <label class="control-label" for="deadline">Deadline</label>
        <div class="controls">
          <input type="text" name="deadline" id="deadline" value="${project.deadline}">
        </div>
      </div>
      <div>
        <label class="control-label" for="delay_minutes">Results Delay</label>
        <div class="controls">
          <input class="input-small" type="text" name="delay_minutes" id="delay_minutes" value="${project.delay_minutes}"> minutes
        </div>
      </div>
      <div>
        <label class="control-label" for="makefile">Makefile</label>
        <div class="controls">
          <a class="btn btn-info btn-mini" tal:condition="project.makefile" href="${request.route_path('file_item', sha1sum=project.makefile.sha1, filename='Makefile')}">
            <i class="icon-white icon-search"></i> Existing Makefile</a>
          <input name="makefile_id" id="makefile" type="file">
        </div>
      </div>
      <div>
        <div class="controls">
          <label class="checkbox">
            <input type="checkbox" name="is_ready" id="is_ready" value="1" tal:attributes="checked 'checked' if project.is_ready else None"> Ready for submissions
          </label>
          <input type="hidden" name="makefile_id" value="${project.makefile_id}">
          <button class="btn btn-default">Update Project Settings</button>
        </div>
      </div>
    </form>

    <h3><span class="help" title="A testable defines the parameters for a single executable that is produced from the student's submission.">Testables</span></h3>
    <div id="testable_tab">
      <ul>
      </ul>
    </div>

    <!-- Dialog Boxes -->
    <div tal:repeat="(lcn, name) [('build_file', 'Build File'), ('execution_file', 'Execution File')]"
         id="${lcn}_new" class="dialog" title="Add New ${name}">
      <form role="form" name="${name}" action="${request.route_path(lcn)}"
            onsubmit="return form_request(this, 'PUT', true);">
        <div class="form-group">
          <label for="${lcn}_name_new">Filename</label>
          <input type="text" name="filename" id="${lcn}_name_new">
        </div>
        <div class="form-group">
          <label for="${lcn}_id_new">Select a ${name.lower()}</label>
          <input name="file_id" id="${lcn}_id_new" type="file">
        </div>
        <input type="hidden" name="project_id" value="${project.id}">
        <button class="btn btn-success" name="submit">Add ${name}</button>
      </form>
    </div>

    <div id="file_verifier_new" class="dialog" title="Add New Expected File" style="background: #ccf">
      <form name="file_verifier" action="${request.route_path('file_verifier')}"
            onsubmit="return form_request(this, 'PUT', true);">
        <label for="fv_filename_new">Filename</label>
        <input type="text" name="filename" id="fv_filename_new" value="" />
        <br/>
        <label for="min_size_new">Min Size</label>
        <input type="text" name="min_size" id="min_size_new" value="0" />
        <br/>
        <label for="max_size_new">Max Size</label>
        <input type="text" name="max_size" id="max_size_new"
               class="form_optional" placeholder="system max" value="" />
        <br/>
        <label for="min_lines_new">Min Lines</label>
        <input type="text" name="min_lines" id="min_lines_new" value="0" />
        <br/>
        <label for="max_lines_new">Max Lines</label>
        <input type="text" name="max_lines" id="max_lines_new"
               class="form_optional" placeholder="system max" value="" />
        <br/>
        <label for="warning_regex_new"><span class="help" title="If provided, any lines which match the regular expression provided here will be output under warning of possible invalid content header.">Warning Regex</span></label>
        <input type="text" name="warning_regex" id="warning_regex_new"
               class="form_optional" placeholder="accept everything" value="" />
        <br/>
        <label for="copy_to_execution_new"><span class="help" title="When checked, the file will be available relative to the present working directory during test execution. This is useful if you want the students to submit input files or test-cases.">Copy to Execution Environment</span></label>
        <input type="checkbox" name="copy_to_execution" id="copy_to_execution_new" value="1" />
        <br/>
        <label for="optional_new">Optional</label>
        <input type="checkbox" name="optional" id="optional_new" value="1" />
        <input type="hidden" name="project_id" value="${project.id}" />
        <br/>
        <button name="submit">Add</button>
      </form>
    </div>
    <div tal:repeat="fv project.file_verifiers" id="file_verifier_${fv.id}"
         class="dialog" title="Update Expected File ${fv.filename}">
      <fieldset>
        <legend>Expected File ${fv.filename}</legend>
        <form name="file_verifier" onsubmit="return form_request(this, 'POST', true);"
              action="${request.route_path('file_verifier_item', file_verifier_id=fv.id)}">
          <label for="filename_${fv.id}">Filename</label>
          <input type="text" name="filename" id="filename_${fv.id}"
                 value="${fv.filename}" />
          <br/>
          <label for="min_size_${fv.id}">Min Size</label>
          <input type="text" name="min_size" id="min_size_${fv.id}"
                 value="${fv.min_size}" />
          <br/>
          <label for="max_size_${fv.id}">Max Size</label>
          <input type="text" name="max_size" id="max_size_${fv.id}"
                 class="form_optional" placeholder="system max"
                 value="${fv.max_size}" />
          <br/>
          <label for="min_lines_${fv.id}">Min Lines</label>
          <input type="text" name="min_lines" id="min_lines_${fv.id}"
                 value="${fv.min_lines}" />
          <br/>
          <label for="max_lines_${fv.id}">Max Lines</label>
          <input type="text" name="max_lines" id="max_lines_${fv.id}"
                 class="form_optional" placeholder="system max"
                 value="${fv.max_lines}" />
          <br/>
          <label for="warning_regex_${fv.id}"><span class="help" title="If provided, any lines which match the regular expression provided here will be output under warning of possible invalid content header.">Warning Regex</span></label>
          <input type="text" name="warning_regex" id="warning_regex_${fv.id}"
                 class="form_optional" placeholder="accept everything" value="${fv.warning_regex}" />
          <br/>
          <label for="copy_to_execution_${fv.id}"><span class="help" title="When checked, the file will be available relative to the present working directory during test execution. This is useful if you want the students to submit input files or test-cases.">Copy to Execution Environment</span></label>
          <input type="checkbox" name="copy_to_execution" id="copy_to_execution_${fv.id}" value="1" tal:attributes="checked 'checked' if fv.copy_to_execution else None"/>
          <br/>
          <label for="optional_${fv.id}">Optional</label>
          <input type="checkbox" name="optional" id="optional_${fv.id}"
                 value="1" tal:attributes="checked 'checked' if fv.optional else None"/>
          <br/>
          <button name="submit">update</button>
        </form>
      </fieldset>
    </div>

    <div tal:repeat="testable project.testables">
      <div tal:repeat="tc testable.test_cases" class="dialog" id="update_tc_${tc.id}" title="Update test case ${tc.name}">
        <form name="test_case"
              action="${request.route_path('test_case_item', test_case_id=tc.id)}"
              onsubmit="return form_request(this, 'POST', true);">
          <label for="testable_${testable.id}_tc_name_${tc.id}">Test Name</label>
          <input type="text" name="name" id="testable_${testable.id}_tc_name_${tc.id}" value="${tc.name}" />
          <br/>
          <label for="testable_${testable.id}_tc_args_${tc.id}">Execution line</label>
          <input type="text" name="args" id="testable_${testable.id}_tc_args_${tc.id}"
                 value="${tc.args}" />
          <br/>
          <label for="testable_${testable.id}_tc_points_${tc.id}">Points</label>
          <input type="text" name="points" id="testable_${testable.id}_tc_points_${tc.id}"
                 value="${tc.points}" />
          <br/>
          <div tal:condition="tc.stdin_id">
            <a href="${request.route_path('file_item', sha1sum=tc.stdin.sha1, filename='{0}:{1}:stdin'.format(project.name, tc.name))}">Existing standard input file</a>
          </div>
          <label for="testable_${testable.id}_tc_input_${tc.id}">Select a new standard input file: </label>
          <input name="stdin_id" id="testable_${testable.id}_tc_input_${tc.id}" type="file" />
          <br/>
          <input type="hidden" name="stdin_id" value="${tc.stdin_id}" />
          Output file source:
          <div style="margin-left: 20px">
            <input id="testable_${testable.id}_tc_source_stdout_${tc.id}" name="output_source"
                   type="radio" value="stdout" class="toggle_tc_file"
                   tal:attributes="checked 'checked' if tc.source == 'stdout' else None"
                   data-testable="${testable.id}" data-tc="${tc.id}" />
            <label for="testable_${testable.id}_tc_source_stdout_${tc.id}">STDOUT</label>
            <br/>
            <input id="testable_${testable.id}_tc_source_stderr_${tc.id}" name="output_source"
                   type="radio" value="stderr" class="toggle_tc_file"
                   tal:attributes="checked 'checked' if tc.source == 'stderr' else None"
                   data-testable="${testable.id}" data-tc="${tc.id}" />
            <label for="testable_${testable.id}_tc_source_stderr_${tc.id}">STDERR</label>
            <br/>
            <input id="testable_${testable.id}_tc_source_file_${tc.id}" name="output_source"
                   type="radio" value="file" class="toggle_tc_file"
                   tal:attributes="checked 'checked' if tc.source == 'file' else None"
                   data-testable="${testable.id}" data-tc="${tc.id}" />
            <label for="testable_${testable.id}_tc_source_file_${tc.id}">named file</label>
          </div>
          <div id="testable_${testable.id}_${tc.id}_file_div"
               tal:attributes="style 'display: None' if tc.source != 'file' else None">
            <label for="testable_${testable.id}_tc_output_filename_${tc.id}">Output file name</label>
            <input type="text" name="output_filename" value="${tc.output_filename}"
                   id="testable_${testable.id}_tc_output_filename_${tc.id}"
                   tal:attributes="disabled 'disabled' if tc.source != 'file' else None" />
          </div>
          Output file handling:
          <div style="margin-left: 20px">
            <input id="testable_${testable.id}_tc_type_diff_${tc.id}" name="output_type"
                   type="radio" value="diff" class="toggle_tc_expected"
                   tal:attributes="checked 'checked' if tc.output_type == 'diff' else None"
                   data-testable="${testable.id}" data-tc="${tc.id}"/>
            <label for="testable_${testable.id}_tc_type_diff_${tc.id}">Diff</label>
            <br/>
            <input id="testable_${testable.id}_tc_type_text_${tc.id}" name="output_type"
                   type="radio" value="text"  class="toggle_tc_expected"
                   tal:attributes="checked 'checked' if tc.output_type == 'text' else None"
                   data-testable="${testable.id}" data-tc="${tc.id}" />
            <label for="testable_${testable.id}_tc_type_text_${tc.id}">Save (text)</label>
            <br/>
            <input id="testable_${testable.id}_tc_type_image_${tc.id}" name="output_type"
                   type="radio" value="image"  class="toggle_tc_expected"
                   tal:attributes="checked 'checked' if tc.output_type == 'image' else None"
                   data-testable="${testable.id}" data-tc="${tc.id}" />
            <label for="testable_${testable.id}_tc_type_image_${tc.id}">Save (image)</label>
          </div>


          <fieldset id="testable_${testable.id}_${tc.id}_expected_div"
                    tal:attributes="style 'display: None' if tc.output_type != 'diff' else None">
            <legend>Diff settings</legend>
            <div tal:condition="tc.expected_id">
              <a href="${request.route_path('file_item', sha1sum=tc.expected.sha1, filename='{0}:{1}:expected'.format(project.name, tc.name))}">Existing expected output file</a>
            </div>
            <label for="testable_${testable.id}_tc_expected_${tc.id}">Select a new expected output file: </label>
            <input name="expected_id" id="testable_${testable.id}_tc_expected_${tc.id}" type="file"
                   tal:attributes="disabled 'disabled' if tc.output_type != 'diff' else None" />
            <br/>
            <input id="testable_${testable.id}_tc_expected_id_${tc.id}" type="hidden"
                   name="expected_id" value="${tc.expected_id}" />
            <input type="checkbox" name="hide_expected" id="testable_${testable.id}_tc_hide_expected_${tc.id}" value="1"
                   tal:attributes="checked 'checked' if tc.hide_expected else None" />
            <label for="testable_${testable.id}_tc_hide_expected_${tc.id}"><span class="help" title="This obscures the left-hand-side of the diff output in the student view thus preventing students from determining what their program should output.">Hide expected output</span></label>
          </fieldset>
          <br/>
          <button name="submit">update</button>
          <input type="button" value="delete" class="delete" data-name="${tc.name}" data-url="${request.route_path('test_case_item', test_case_id=tc.id)}" />
        </form>
      </div>
      <div id="testable_${testable.id}_tc_new" class="dialog"
           title="Add new test case" style="background: #ccf">
        <form name="test_case" action="${request.route_path('test_case')}"
              onsubmit="return form_request(this, 'PUT', true);">
          <label for="testable_${testable.id}_tc_name_new">Test Name</label>
          <input type="text" name="name" id="testable_${testable.id}_tc_name_new" />
          <br/>
          <label for="testable_${testable.id}_tc_args_new">Execution line</label>
          <input type="text" name="args" id="testable_${testable.id}_tc_args_new" value="a.out" />
          <br/>
          <label for="testable_${testable.id}_tc_points_new">Points</label>
          <input type="text" name="points" id="testable_${testable.id}_tc_points_new" value="1" />
          <br/>
          <label for="testable_${testable.id}_tc_input_new">Select a standard input file: </label>
          <input name="stdin_id" id="testable_${testable.id}_tc_input_new" type="file" />
          <br/>
          <input type="hidden" name="stdin_id" value="" />
          Output file source:
          <div style="margin-left: 20px">
            <input id="testable_${testable.id}_tc_source_stdout_new" name="output_source"
                   type="radio" value="stdout" class="toggle_tc_file" checked="checked"
                   data-testable="${testable.id}" data-tc="new" />
            <label for="testable_${testable.id}_tc_source_stdout_new">STDOUT</label>
            <br/>
            <input id="testable_${testable.id}_tc_source_stderr_new" name="output_source"
                   type="radio" value="stderr" class="toggle_tc_file"
                   data-testable="${testable.id}" data-tc="new" />
            <label for="testable_${testable.id}_tc_source_stderr_new">STDERR</label>
            <br/>
            <input id="testable_${testable.id}_tc_source_file_new" name="output_source"
                   type="radio" value="file" class="toggle_tc_file"
                   data-testable="${testable.id}" data-tc="new" />
            <label for="testable_${testable.id}_tc_source_file_new">named file</label>
          </div>
          <div id="testable_${testable.id}_new_file_div" style="display: None">
            <label for="testable_${testable.id}_tc_output_filename_new">Output file name</label>
            <input type="text" name="output_filename"
                   id="testable_${testable.id}_tc_output_filename_new" disabled="disabled" />
          </div>
          Output file handling:
          <div style="margin-left: 20px">
            <input id="testable_${testable.id}_tc_type_diff_new" name="output_type"
                   type="radio" value="diff" class="toggle_tc_expected" checked="checked"
                   data-testable="${testable.id}" data-tc="new"/>
            <label for="testable_${testable.id}_tc_type_diff_new">Diff</label>
            <br/>
            <input id="testable_${testable.id}_tc_type_text_new" name="output_type"
                   type="radio" value="text"  class="toggle_tc_expected"
                   data-testable="${testable.id}" data-tc="new" />
            <label for="testable_${testable.id}_tc_type_text_new">Save (text)</label>
            <br/>
            <input id="testable_${testable.id}_tc_type_image_new" name="output_type"
                   type="radio" value="image"  class="toggle_tc_expected"
                   data-testable="${testable.id}" data-tc="new" />
            <label for="testable_${testable.id}_tc_type_image_new">Save (image)</label>
          </div>
          <fieldset id="testable_${testable.id}_new_expected_div">
            <legend>Diff settings</legend>
            <label for="testable_${testable.id}_tc_expected_new">Select the expected output file: </label>
            <input name="expected_id" id="testable_${testable.id}_tc_expected_new" type="file" />
            <br/>
            <input id="testable_${testable.id}_tc_expected_id_new" type="hidden"
                   name="expected_id" value="" />
            <input type="checkbox" name="hide_expected" id="testable_${testable.id}_tc_hide_expected_new" value="1"/>
            <label for="testable_${testable.id}_tc_hide_expected_new"><span class="help" title="This obscures the left-hand-side of the diff output in the student view thus preventing students from determining what their program should output.">Hide expected output</span></label>
          </fieldset>
          <input type="hidden" name="testable_id" value="${testable.id}" />
          <br/>
          <button name="submit">add</button>
        </form>
      </div>
    </div>
  </div>
  <div metal:fill-slot="eof_content">
    <link rel="stylesheet" href="${request.static_path('nudibranch:static/smoothness/jquery-ui-1.9.2.custom.css')}" type="text/css" media="screen" />
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>
    <script src="${request.static_path('nudibranch:static/js/sha1.js')}"></script>
    <script>
      var build_file_path = '${request.route_path('build_file')}';
      var build_files = ${project.build_files_json()};
      var execution_file_path = '${request.route_path('execution_file')}';
      var execution_files = ${project.execution_files_json()};
      var expected_file_path = '${request.route_path('file_verifier')}';
      var expected_files = ${project.file_verifiers_json()};
      var file_path = '${request.route_path('file')}';
      var proj_id = ${project.id};
      var testables = ${project.testables_json()};
    </script>
    <script src="${request.static_path('nudibranch:static/js/proj_edit.js')}"></script>
  </div>
</metal:block>
